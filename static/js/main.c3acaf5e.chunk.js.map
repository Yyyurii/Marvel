{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/vision.png","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","hooks/http.hook.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/errorBoundary/errorBoundary.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","pages/MainPage.js","components/comicsList/ComicsList.js","pages/ComicsPage.js","pages/Page404.js","pages/SingleComicPage.js","components/app/App.js","index.js"],"names":["AppHeader","className","to","style","color","isActive","end","Spinner","xmlns","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","useMarvelService","_apiBase","_apiKey","_offsetBase","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useHttp","getAllCharacters","offset","res","results","map","_transformCharacter","getCharacter","id","getAllComics","_transformComics","getComics","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","language","textObjects","price","prices","pageCount","View","imgStyle","href","RandomChar","setChar","useEffect","updateChar","timerId","setInterval","clearInterval","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","props","charList","setCharList","setOffset","getCharList","onCharListLoaded","newCharList","charListItems","arr","item","onCharSelected","renderCharList","ErrorBoundary","state","errorInfo","this","setState","children","Component","Skeleton","CharInfo","updateCharInfo","charId","onCharInfoLoaded","skeleton","index","MainPage","selectedChar","setSelectedChar","decoration","ComicsList","comicsList","setComicsList","getComicsList","onComicsListLoaded","newComicsList","comicsArr","renderComics","i","onComicSelected","renderComicsList","errorContent","ComicsPage","setSelectedComic","Page404","textAlign","fontSize","fontWeight","SingleComic","singleComic","setSingleComic","comicId","useParams","updateComicInfo","onComicInfoLoaded","comic","App","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3acaf5e.chunk.js","sourcesContent":["import './appHeader.scss';\n\nimport { Link, NavLink } from \"react-router-dom\";\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <Link to=\"/\">\n                    <span>Marvel</span> information portal\n                </Link>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><NavLink \n                            style={({isActive}) => ({color : isActive ? '#9F0013' : 'inherit'})}\n                            end \n                            to=\"/\">Characters</NavLink></li>\n                    /\n                    <li><NavLink\n                            style={({isActive}) => ({color : isActive ? '#9F0013' : 'inherit'})} \n                            to=\"/comics\">Comics</NavLink></li>\n                </ul>\n            </nav>\n        </header>\n\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","import { useHttp } from '../hooks/http.hook';\n\nconst useMarvelService = () => {\n    const _apiBase = 'https://gateway.marvel.com:443/v1/public/';\n    const _apiKey = 'apikey=b6773c6fc7ae5087bcfd879f0e9babe8';\n    const _offsetBase = 340;\n\n    const { loading, error, request, clearError } = useHttp();\n\n    const getAllCharacters = async (offset = _offsetBase) => {\n        const res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformCharacter);\n    }\n\n    const getCharacter = async (id) => {\n        const res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\n        return _transformCharacter(res.data.results[0]);\n    }\n\n    const getAllComics = async (offset = _offsetBase) => {\n        const res = await request(`${_apiBase}comics?limit=8&offset=${offset}&${_apiKey}`);\n        return res.data.results.map(_transformComics);\n    }\n\n    const getComics = async (id) => {\n        const res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\n        return _transformComics(res.data.results[0]);\n    }\n\n    const _transformCharacter = (char) => {\n        return {\n            id: char.id,\n            name: char.name,\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\n            homepage: char.urls[0].url,\n            wiki: char.urls[1].url,\n            comics: char.comics.items\n        }\n    }\n\n    const _transformComics = (comics) => {\n        return {\n            id: comics.id,\n            title: comics.title,\n            description: comics.description ? `${comics.description.slice(0, 210)}...` : 'There is no description for this character',\n            thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n            language: comics.textObjects.language || 'en-us',\n            price: comics.prices.price ? `${comics.prices.price}$` : 'not available',\n            pageCount: comics.pageCount\n        }\n    }\n\n    return { loading, error, clearError, getAllCharacters, getCharacter, getAllComics, getComics };\n}\n\nexport default useMarvelService;","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\r\n\r\n        setLoading(true);\r\n\r\n        try {\r\n            const response = await fetch(url, {method, body, headers});\r\n\r\n            if (!response.ok) {\r\n                throw new Error(`Could not fetch ${url}, status: ${response.status}`);\r\n            }\r\n\r\n            const data = await response.json();\r\n\r\n            setLoading(false);\r\n            return data;\r\n        } catch(e) {\r\n            setLoading(false);\r\n            setError(e.message);\r\n            throw e;\r\n        }\r\n    }, []);\r\n\r\n    const clearError = useCallback(() => setError(null), []);\r\n\r\n    return {loading, request, error, clearError}\r\n}","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useState, useEffect } from 'react';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\n\nconst RandomChar = () => {\n\n    const { error, loading, clearError, getCharacter } = useMarvelService();\n\n    const [char, setChar] = useState({});\n\n    useEffect(() => {\n        updateChar();\n        const timerId = setInterval(updateChar, 15000);\n        return () => {\n            clearInterval(timerId);\n        }\n    }, []);\n\n    const onCharLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateChar = () => {\n        clearError();\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        getCharacter(id)\n            .then(onCharLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error) ? <View char={char} /> : null;\n\n    return (\n        <div className=\"randomchar\">\n            {errorMessage}\n            {spinner}\n            {content}\n            <div className=\"randomchar__static\">\n                <p className=\"randomchar__title\">\n                    Random character for today!<br />\n                    Do you want to get to know him better?\n                </p>\n                <p className=\"randomchar__title\">\n                    Or choose another one\n                </p>\n                <button onClick={updateChar} className=\"button button__main\">\n                    <div className=\"inner\">try it</div>\n                </button>\n                <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n            </div>\n        </div>\n    )\n\n}\n\nconst View = ({ char }) => {\n    const { name, description, thumbnail, homepage, wiki } = char;\n    let imgStyle = { 'objectFit': 'cover' };\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { 'objectFit': 'contain' };\n    }\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">\n                    {description}\n                </p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import { useState, useEffect } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nconst CharList = (props) => {\r\n\r\n    const [charList, setCharList] = useState([]);\r\n    const [offset, setOffset] = useState(210);\r\n\r\n    const { error, loading, getAllCharacters } = useMarvelService();\r\n\r\n    useEffect(() => {\r\n        getCharList();\r\n    }, [])\r\n\r\n    const onCharListLoaded = (newCharList) => {\r\n        setCharList(charList => [...charList, ...newCharList]);\r\n        setOffset(offset => offset + 9);\r\n    }\r\n\r\n    const getCharList = (offset) => {\r\n        getAllCharacters(offset)\r\n            .then(onCharListLoaded)\r\n    }\r\n\r\n    function renderCharList(arr) {\r\n        const charListItems = arr.map(item => {\r\n            return (\r\n                <li\r\n                    className=\"char__item\"\r\n                    key={item.id}\r\n                    onClick={() => props.onCharSelected(item.id)}>\r\n                    <img src={item.thumbnail} alt={item.name} />\r\n                    <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        })\r\n\r\n        return (\r\n            <ul className=\"char__grid\" >\r\n                {charListItems}\r\n            </ul >\r\n        )\r\n    }\r\n\r\n    const charListItems = renderCharList(charList);\r\n    const spinner = loading ? <Spinner /> : null;\r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n\r\n    return (\r\n        <div className=\"char__list\" >\r\n            {spinner}\r\n            {errorMessage}\r\n            {charListItems}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                onClick={() => getCharList(offset)}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default CharList;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  state = {\r\n    error: false\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({\r\n      error: true\r\n    })\r\n  }\r\n\r\n  render() {\r\n    if(this.state.error) {\r\n      return <ErrorMessage/>\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import './charInfo.scss';\nimport { useState, useEffect } from 'react';\n\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\nimport useMarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\n\nconst CharInfo = (props) => {\n\n    const [char, setChar] = useState(null);\n\n    const { error, loading, getCharacter } = useMarvelService();\n\n    useEffect(() => {\n        updateCharInfo(props.charId)\n    }, [props.charId]);\n\n    const onCharInfoLoaded = (char) => {\n        setChar(char);\n    }\n\n    const updateCharInfo = (id) => {\n        if (!id) {\n            return;\n        }\n        getCharacter(id)\n            .then(onCharInfoLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !char) ? <View char={char} /> : null;\n    const skeleton = char || loading || error ? null : <Skeleton />;\n\n    return (\n        <div className=\"char__info\">\n            {errorMessage}\n            {spinner}\n            {content}\n            {skeleton}\n        </div>\n    )\n\n}\n\nexport default CharInfo;\n\nconst View = ({ char }) => {\n\n    const { name, description, thumbnail, homepage, wiki, comics } = char;\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt=\"abyss\" />\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">\n                {description}\n            </div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {\n                    comics.slice(0, 10).map((item, index) => {\n                        return (\n                            <li className=\"char__comics-item\" key={index}>\n                                {item.name}\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        </>\n    )\n}","import decoration from '../resources/img/vision.png';\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport RandomChar from \"../components/randomChar/RandomChar\";\r\nimport CharList from \"../components/charList/CharList\";\r\nimport ErrorBoundary from \"../components/errorBoundary/errorBoundary\";\r\nimport CharInfo from \"../components/charInfo/CharInfo\";\r\n\r\nconst MainPage = () => {\r\n\r\n  const [selectedChar, setSelectedChar] = useState(null);\r\n\r\n  const onCharSelected = (id) => {\r\n    setSelectedChar(id);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <RandomChar />\r\n      <div className=\"char__content\">\r\n        <CharList onCharSelected={onCharSelected} />\r\n        <ErrorBoundary>\r\n          <CharInfo charId={selectedChar} />\r\n        </ErrorBoundary>\r\n      </div>\r\n      <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default MainPage;","import './comicsList.scss';\n\nimport useMarvelService from '../../services/MarvelService';\nimport ErrorBoundary from '../errorBoundary/errorBoundary';\nimport Spinner from '../spinner/Spinner';\n\nimport { useEffect, useState } from 'react';\n\nimport { Link } from 'react-router-dom';\n\nconst ComicsList = (props) => {\n    const [comicsList, setComicsList] = useState([]);\n    const [offset, setOffset] = useState(210);\n\n    const { error, loading, getAllComics } = useMarvelService();\n\n    useEffect(() => {\n        getComicsList();\n    }, []);\n\n    const onComicsListLoaded = (newComicsList) => {\n        setComicsList(comicsList => [...comicsList, ...newComicsList]);\n        setOffset(offset => offset + 8);\n    }\n\n    const getComicsList = (offset) => {\n        getAllComics(offset)\n            .then(onComicsListLoaded)\n    }\n\n    function renderComicsList(comicsArr) {\n        const renderComics = comicsArr.map((comics, i) => {\n            return (\n                <li \n                    className=\"comics__item\" \n                    key={i}\n                    onClick={() => props.onComicSelected(comics.id)}>\n                    <Link to={`/comics/${comics.id}`}>\n                        <img src={comics.thumbnail} alt=\"ultimate war\" className=\"comics__item-img\" />\n                        <div className=\"comics__item-name\">{comics.title}</div>\n                        <div className=\"comics__item-price\">{comics.price}</div>\n                    </Link>\n                </li>\n            )\n        });\n\n        return (\n            <ul className=\"comics__grid\">\n                {renderComics}\n            </ul>\n        )\n    }\n\n    const content = renderComicsList(comicsList);\n    const errorContent = error ? <ErrorBoundary /> : null;\n    const spinner = loading ? <Spinner /> : null;\n\n    return (\n        <div className=\"comics__list\">\n            {content}\n            {errorContent}\n            {spinner}\n            <button \n                className=\"button button__main button__long\"\n                onClick={() => getComicsList(offset)} >\n                <div className=\"inner\">load more</div>\n            </button>\n        </div>\n    )\n}\n\nexport default ComicsList;","import { useState } from 'react';\r\n\r\nimport ComicsList from \"../components/comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n\r\n  const [selectedComic, setSelectedComic] = useState(null);\r\n\r\n  const onComicSelected = (id) => {\r\n      setSelectedComic(id);\r\n  }\r\n\r\n  return (\r\n      <ComicsList onComicSelected={onComicSelected} />\r\n  )\r\n}\r\n\r\nexport default ComicsPage;","import ErrorMessage from '../components/errorMessage/ErrorMessage';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Page404 = () => {\r\n  return (\r\n    <div style={{ textAlign: 'center', fontSize: '28px', margin: '20px auto' }}>\r\n      <ErrorMessage />\r\n      <p>Path does not exist</p>\r\n      <Link\r\n        to='/'\r\n        style={{ textAlign: 'center', fontSize: '28px', fontWeight: '700', margin: '20px auto', color: '#9F0013' }}>\r\n        Back to the home page\r\n      </Link>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Page404;","import './SingleComicPage.scss';\n\nimport { useState, useEffect } from 'react';\n\nimport { useParams, Link } from 'react-router-dom';\n\nimport useMarvelService from '../services/MarvelService';\nimport ErrorMessage from '../components/errorMessage/ErrorMessage';\nimport Spinner from '../components/spinner/Spinner';\n\nconst SingleComic = () => {\n\n    const { error, loading, clearError, getComics } = useMarvelService();\n\n    const [singleComic, setSingleComic] = useState(null);\n\n    const { comicId } = useParams();\n\n    useEffect(() => {\n        updateComicInfo(comicId)\n    }, [comicId]);\n\n    const onComicInfoLoaded = (comic) => {\n        setSingleComic(comic);\n    }\n\n    const updateComicInfo = (id) => {\n        clearError();\n        getComics(id)\n            .then(onComicInfoLoaded)\n    }\n\n    const errorMessage = error ? <ErrorMessage /> : null;\n    const spinner = loading ? <Spinner /> : null;\n    const content = !(loading || error || !singleComic) ? <View comic={singleComic} /> : null;\n\n    return (\n        <>\n            {errorMessage}\n            {spinner}\n            {content}\n        </>\n    )\n}\n\nexport default SingleComic;\n\nconst View = ({ comic }) => {\n\n    const { thumbnail, language, description, title, pageCount, price } = comic;\n\n    return (\n        <div className=\"single-comic\">\n            <img src={thumbnail} alt=\"x-men\" className=\"single-comic__img\" />\n            <div className=\"single-comic__info\">\n                <h2 className=\"single-comic__name\">{title}</h2>\n                <p className=\"single-comic__descr\">{description}</p>\n                <p className=\"single-comic__descr\">{pageCount} pages</p>\n                <p className=\"single-comic__descr\">Language: {language}</p>\n                <div className=\"single-comic__price\">{price}</div>\n            </div>\n            <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\n        </div>\n    )\n}","import AppHeader from \"../appHeader/AppHeader\";\r\n\r\nimport { MainPage, ComicsPage, Page404 } from \"../../pages\";\r\nimport SingleComic from \"../../pages/SingleComicPage\";\r\n\r\nimport {\r\n    BrowserRouter as Router, Routes,\r\n    Route\r\n} from \"react-router-dom\";\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"app\">\r\n                <AppHeader />\r\n                <main>\r\n                    <Routes>\r\n                        <Route path=\"/\" element={<MainPage />} />\r\n                        <Route path=\"/comics\" element={<ComicsPage />} />\r\n                        <Route path=\"/comics/:comicId\" element={<SingleComic />} />\r\n                        <Route path=\"*\" element={<Page404 />} />\r\n                    </Routes>\r\n                </main>\r\n            </div>\r\n        </Router>\r\n    )\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\n\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}